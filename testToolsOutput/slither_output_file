[91m
NikyBotzPictureDay.withdrawFunds() (NikyBotzPictureDay.sol#232-237) sends eth to arbitrary user
	Dangerous calls:
	- (sent) = wallet.call{value: address(this).balance}() (NikyBotzPictureDay.sol#235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
[93m
NikyBotzPictureDay.mintSchoolBotz(uint8) (NikyBotzPictureDay.sol#207-227) contains a tautology or contradiction:
	- require(bool,string)(numTokens + _currPublicID <= 5901,Over token limit.) (NikyBotzPictureDay.sol#214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction[0m
[93m
ERC721._checkOnERC721Received(address,address,uint256,bytes) (@openzeppelin/contracts/token/ERC721/ERC721.sol#382-403) ignores return value by IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (@openzeppelin/contracts/token/ERC721/ERC721.sol#389-399)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
[92m
NikyBotzPictureDay.constructor(string,string,string,address,address).name (NikyBotzPictureDay.sol#84) shadows:
	- ERC721.name() (@openzeppelin/contracts/token/ERC721/ERC721.sol#79-81) (function)
	- IERC721Metadata.name() (@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#16) (function)
NikyBotzPictureDay.constructor(string,string,string,address,address).symbol (NikyBotzPictureDay.sol#85) shadows:
	- ERC721.symbol() (@openzeppelin/contracts/token/ERC721/ERC721.sol#86-88) (function)
	- IERC721Metadata.symbol() (@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#21) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
[92m
ERC721._checkOnERC721Received(address,address,uint256,bytes) (@openzeppelin/contracts/token/ERC721/ERC721.sol#382-403) has external calls inside a loop: IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (@openzeppelin/contracts/token/ERC721/ERC721.sol#389-399)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
[92m
Variable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).retval (@openzeppelin/contracts/token/ERC721/ERC721.sol#389)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (@openzeppelin/contracts/token/ERC721/ERC721.sol#382-403) potentially used before declaration: retval == IERC721Receiver.onERC721Received.selector (@openzeppelin/contracts/token/ERC721/ERC721.sol#390)
Variable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (@openzeppelin/contracts/token/ERC721/ERC721.sol#391)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (@openzeppelin/contracts/token/ERC721/ERC721.sol#382-403) potentially used before declaration: reason.length == 0 (@openzeppelin/contracts/token/ERC721/ERC721.sol#392)
Variable 'ERC721._checkOnERC721Received(address,address,uint256,bytes).reason (@openzeppelin/contracts/token/ERC721/ERC721.sol#391)' in ERC721._checkOnERC721Received(address,address,uint256,bytes) (@openzeppelin/contracts/token/ERC721/ERC721.sol#382-403) potentially used before declaration: revert(uint256,uint256)(32 + reason,mload(uint256)(reason)) (@openzeppelin/contracts/token/ERC721/ERC721.sol#396)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables[0m
[92m
ERC721._checkOnERC721Received(address,address,uint256,bytes) (@openzeppelin/contracts/token/ERC721/ERC721.sol#382-403) uses assembly
	- INLINE ASM (@openzeppelin/contracts/token/ERC721/ERC721.sol#395-397)
Address.isContract(address) (@openzeppelin/contracts/utils/Address.sol#27-37) uses assembly
	- INLINE ASM (@openzeppelin/contracts/utils/Address.sol#33-35)
Address.verifyCallResult(bool,bytes,string) (@openzeppelin/contracts/utils/Address.sol#196-216) uses assembly
	- INLINE ASM (@openzeppelin/contracts/utils/Address.sol#208-211)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage[0m
[92m
NikyBotzPictureDay.setProvenanceHash(string) (NikyBotzPictureDay.sol#116-124) compares to a boolean constant:
	-require(bool,string)(_provenanceHashSet == false,Already set) (NikyBotzPictureDay.sol#120)
NikyBotzPictureDay.mintFromWhitelist(uint8,bytes32[]) (NikyBotzPictureDay.sol#171-202) compares to a boolean constant:
	-require(bool,string)(MerkleProof.verify(proof,getWhitelistRoot(),leaf) == true,Invalid address) (NikyBotzPictureDay.sol#179-182)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality[0m
[92m
Different versions of Solidity is used:
	- Version used: ['^0.8.0', '^0.8.10']
	- ^0.8.0 (@openzeppelin/contracts/access/AccessControl.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/access/IAccessControl.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/access/Ownable.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/token/ERC721/ERC721.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/token/ERC721/IERC721.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/utils/Address.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/utils/Context.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/utils/Strings.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/utils/introspection/ERC165.sol#4)
	- ^0.8.0 (@openzeppelin/contracts/utils/introspection/IERC165.sol#4)
	- ^0.8.10 (NikyBotzPictureDay.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used[0m
[92m
Address.functionCall(address,bytes) (@openzeppelin/contracts/utils/Address.sol#80-82) is never used and should be removed
Address.functionCall(address,bytes,string) (@openzeppelin/contracts/utils/Address.sol#90-96) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (@openzeppelin/contracts/utils/Address.sol#109-115) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256,string) (@openzeppelin/contracts/utils/Address.sol#123-134) is never used and should be removed
Address.functionDelegateCall(address,bytes) (@openzeppelin/contracts/utils/Address.sol#169-171) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (@openzeppelin/contracts/utils/Address.sol#179-188) is never used and should be removed
Address.functionStaticCall(address,bytes) (@openzeppelin/contracts/utils/Address.sol#142-144) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (@openzeppelin/contracts/utils/Address.sol#152-161) is never used and should be removed
Address.sendValue(address,uint256) (@openzeppelin/contracts/utils/Address.sol#55-60) is never used and should be removed
Address.verifyCallResult(bool,bytes,string) (@openzeppelin/contracts/utils/Address.sol#196-216) is never used and should be removed
Context._msgData() (@openzeppelin/contracts/utils/Context.sol#21-23) is never used and should be removed
ERC721._baseURI() (@openzeppelin/contracts/token/ERC721/ERC721.sol#105-107) is never used and should be removed
ERC721._burn(uint256) (@openzeppelin/contracts/token/ERC721/ERC721.sol#302-314) is never used and should be removed
Strings.toHexString(uint256) (@openzeppelin/contracts/utils/Strings.sol#40-51) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code[0m
[92m
Pragma version^0.8.0 (@openzeppelin/contracts/access/AccessControl.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/access/IAccessControl.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/access/Ownable.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/token/ERC721/ERC721.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/token/ERC721/IERC721.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/utils/Address.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/utils/Context.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/utils/Strings.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/utils/introspection/ERC165.sol#4) allows old versions
Pragma version^0.8.0 (@openzeppelin/contracts/utils/introspection/IERC165.sol#4) allows old versions
Pragma version^0.8.10 (NikyBotzPictureDay.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6/0.8.7
solc-0.8.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m
[92m
Low level call in Address.sendValue(address,uint256) (@openzeppelin/contracts/utils/Address.sol#55-60):
	- (success) = recipient.call{value: amount}() (@openzeppelin/contracts/utils/Address.sol#58)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (@openzeppelin/contracts/utils/Address.sol#123-134):
	- (success,returndata) = target.call{value: value}(data) (@openzeppelin/contracts/utils/Address.sol#132)
Low level call in Address.functionStaticCall(address,bytes,string) (@openzeppelin/contracts/utils/Address.sol#152-161):
	- (success,returndata) = target.staticcall(data) (@openzeppelin/contracts/utils/Address.sol#159)
Low level call in Address.functionDelegateCall(address,bytes,string) (@openzeppelin/contracts/utils/Address.sol#179-188):
	- (success,returndata) = target.delegatecall(data) (@openzeppelin/contracts/utils/Address.sol#186)
Low level call in NikyBotzPictureDay.withdrawFunds() (NikyBotzPictureDay.sol#232-237):
	- (sent) = wallet.call{value: address(this).balance}() (NikyBotzPictureDay.sol#235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
[92m
Parameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (@openzeppelin/contracts/token/ERC721/ERC721.sol#179) is not in mixedCase
Event NikyBotzPictureDayallMintOnStateFlipped(bool) (NikyBotzPictureDay.sol#44) is not in CapWords
Event NikyBotzPictureDaypublicMintOnStateFlipped(bool) (NikyBotzPictureDay.sol#46) is not in CapWords
Event NikyBotzPictureDaywhitelistMintOnStateFlipped(bool) (NikyBotzPictureDay.sol#48) is not in CapWords
Parameter NikyBotzPictureDay.tokenURI(uint256)._tokenId (NikyBotzPictureDay.sol#274) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
[92m
grantRole(bytes32,address) should be declared external:
	- AccessControl.grantRole(bytes32,address) (@openzeppelin/contracts/access/AccessControl.sol#130-132)
revokeRole(bytes32,address) should be declared external:
	- AccessControl.revokeRole(bytes32,address) (@openzeppelin/contracts/access/AccessControl.sol#143-145)
renounceRole(bytes32,address) should be declared external:
	- AccessControl.renounceRole(bytes32,address) (@openzeppelin/contracts/access/AccessControl.sol#161-165)
renounceOwnership() should be declared external:
	- Ownable.renounceOwnership() (@openzeppelin/contracts/access/Ownable.sol#54-56)
balanceOf(address) should be declared external:
	- ERC721.balanceOf(address) (@openzeppelin/contracts/token/ERC721/ERC721.sol#62-65)
name() should be declared external:
	- ERC721.name() (@openzeppelin/contracts/token/ERC721/ERC721.sol#79-81)
symbol() should be declared external:
	- ERC721.symbol() (@openzeppelin/contracts/token/ERC721/ERC721.sol#86-88)
tokenURI(uint256) should be declared external:
	- ERC721.tokenURI(uint256) (@openzeppelin/contracts/token/ERC721/ERC721.sol#93-98)
	- NikyBotzPictureDay.tokenURI(uint256) (NikyBotzPictureDay.sol#274-276)
approve(address,uint256) should be declared external:
	- ERC721.approve(address,uint256) (@openzeppelin/contracts/token/ERC721/ERC721.sol#112-122)
setApprovalForAll(address,bool) should be declared external:
	- ERC721.setApprovalForAll(address,bool) (@openzeppelin/contracts/token/ERC721/ERC721.sol#136-138)
transferFrom(address,address,uint256) should be declared external:
	- ERC721.transferFrom(address,address,uint256) (@openzeppelin/contracts/token/ERC721/ERC721.sol#150-159)
safeTransferFrom(address,address,uint256) should be declared external:
	- ERC721.safeTransferFrom(address,address,uint256) (@openzeppelin/contracts/token/ERC721/ERC721.sol#164-170)
withdrawFunds() should be declared external:
	- NikyBotzPictureDay.withdrawFunds() (NikyBotzPictureDay.sol#232-237)
getReserveMintCount() should be declared external:
	- NikyBotzPictureDay.getReserveMintCount() (NikyBotzPictureDay.sol#242-244)
getPublicMintCount() should be declared external:
	- NikyBotzPictureDay.getPublicMintCount() (NikyBotzPictureDay.sol#249-251)
flipAllMintState() should be declared external:
	- NikyBotzPictureDay.flipAllMintState() (NikyBotzPictureDay.sol#282-285)
flipPublicMintState() should be declared external:
	- NikyBotzPictureDay.flipPublicMintState() (NikyBotzPictureDay.sol#290-293)
flipWhitelistMintState() should be declared external:
	- NikyBotzPictureDay.flipWhitelistMintState() (NikyBotzPictureDay.sol#298-301)
getMintState() should be declared external:
	- NikyBotzPictureDay.getMintState() (NikyBotzPictureDay.sol#306-308)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external[0m
NikyBotzPictureDay.sol analyzed (14 contracts with 77 detectors), 73 result(s) found
