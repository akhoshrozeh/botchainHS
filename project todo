project todo

- create auto locks after 1500, 3000, and 5900 public sales
- test with erc721enumerable
	- create tests first tht will measure gas usage on relevant txns/feu calls
	- compare results and create graph for them
- optimization and security review
- fuzzing
- test coverage (line and branch)
- Optimization of gas/storage
- test on rinkeby with opensea


project fixes

- change constructor to pass in in-place string "BOTZ" for name and symbol
	- adjust all describe() in test scripts
- change all tests to expect() from assert()
	- make sure using expect().to.equal() and NOT format of assert()

- minimize require() and if statements 
	- specifically the minting functions




auto lock approaches:

1: auto locks at 1500 or 1501. this is the simplest and probably cheapest
	implement by adding an if statement at end of minting functions that can trigger flipping of a sale

2: we have if statements in both minting blocks (per function) that check the curr id
   if person requests 2 but at say 1499 have been minted, we can revert the entire call and mint one then refund price of token

   downside: want to avoid sending eth from the contract if we can

3: check before minting starts if theres enough for whats request. if so, fufill. 		
	otherwise revert

	downside: users waste gas trying to mint 2 when they can mint 1






